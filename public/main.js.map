{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { JwtModule } from '@auth0/angular-jwt';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst appRoutes : Routes = [\n  { path : '',             component : HomeComponent },\n  { path : 'login',        component : LoginComponent },\n  { path : 'register',     component : RegisterComponent },\n  { path : 'profile',      component : ProfileComponent,    canActivate : [AuthGuard] },\n  { path : 'dashboard',    component : DashboardComponent,  canActivate : [AuthGuard] }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProfileComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    MaterializeModule,\n    FormsModule,\n    HttpModule,\n    JwtModule.forRoot({\n      config: {\n        whitelistedDomains: ['localhost:3000'],\n        tokenGetter: function() {\n          return localStorage.getItem('id_token');\n        }\n      }\n    })\n  ],\n  providers: [\n    ValidateService,\n    AuthService,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <h2 class=\\\"col s6 push-m3\\\">dashboard</h2>\\n  <p class=\\\"col s12 push-m3\\\">welcome to the good place.</p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".btn {\\n  min-width: 100%;\\n}\\n\\n#home-board {\\n  height: 30vh;\\n  padding: 2vh 1vh 2vh 1vh;\\n  margin: 2vh 0 2vh 0;\\n}\\n\"","module.exports = \"<div id=\\\"home-board\\\" class=\\\"brown lighten-2 white-text row\\\">\\n  <h1 class=\\\"center\\\">welcome home</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s6 push-l3 l3\\\">\\n      <button [routerLink]=\\\"['/login']\\\" class=\\\"blue darken-1 btn waves-effect\\\">Login</button>\\n    </div>\\n    <div class=\\\"col s6 push-l3 l3\\\">\\n      <button [routerLink]=\\\"['/register']\\\" class=\\\"green darken-1 btn waves-effect\\\">Register</button>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col m4\\\">\\n    <h4>Lorem Ipsum</h4>\\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam tincidunt dignissim eros ac tristique.\\n      Ut hendrerit laoreet accumsan. Donec cursus augue id quam convallis, eget maximus dolor consectetur.\\n      Donec luctus orci sit amet ex ultricies ullamcorper. Nunc vulputate sodales enim, ut suscipit neque</p>\\n  </div>\\n  <div class=\\\"col m4\\\">\\n    <h4>Ron</h4>\\n    <p>The next day, the boys skip the gym and focus on tanning and laundry, while Miss ‘I Do Nothing’ Angelina gets in trouble for refusing to lift a finger around the house.\\n      Later on there’s MORE upset for poor Sammi, as she faces the consequences of Ronnie’s bad behaviour.\\n      Learning all the gritty details about his antics with other girls in an “anonymous” letter - will Ronnie finally come clean?</p>\\n  </div>\\n  <div class=\\\"col m4\\\">\\n    <h4>Imagine - John Lennon</h4>\\n    <p>Imagine there's no heaven.\\n      It's easy if you try.\\n      No hell below us.\\n      Above us only sky.\\n      Imagine all the people living for today.</p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <h2 class=\\\"col s6 m3 push-m3\\\">login</h2>\\n  <form (submit)=\\\"onLoginSubmit()\\\" class=\\\"col s12\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"input-field col s12 m6 push-m3\\\">\\n        <input name=\\\"username\\\" [(ngModel)]=\\\"username\\\" type=\\\"text\\\" class=\\\"validate\\\" required>\\n        <label for=\\\"username\\\">username</label>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"input-field col s12 m6 push-m3\\\">\\n        <input name=\\\"password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\" required>\\n        <label for=\\\"password\\\">password</label>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"input-field col s12 m6 push-m3 white-text\\\">\\n        <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn waves-effect\\\" required>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { toast } from 'angular2-materialize';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n    const _this = this;\n    this.authService.authenticateUser(user).subscribe(function(data) {\n      console.log(data);\n      if (data.succ) {\n        _this.authService.storeUserData(data.token, data.user);\n        toast('Logged in!', 5000, 'green');\n        _this.router.navigate(['/dashboard']);\n      }\n      else {\n        toast('Incorrect login information', 5000, 'red');\n        _this.router.navigate(['/login']);\n      }\n    });\n  }\n}\n","module.exports = \"/* TODO: custom layout */\\n.brand-logo {\\n  left: 50px;\\n}\\n#home-nav-link {\\n  margin-right: 100px;\\n}\\n\"","module.exports = \"<nav>\\n  <div class=\\\"blue nav-wrapper\\\">\\n    <a href=\\\"#\\\" class=\\\"brand-logo\\\">TGP</a>\\n    <ul id=\\\"nav-mobile\\\" class=\\\"right hide-on-med-and-down\\\">\\n      <li id=\\\"home-nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact : true }\\\">\\n            <a [routerLink]=\\\"['/']\\\">home</a>\\n      </li>\\n      <li *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact : true }\\\">\\n            <a [routerLink]=\\\"['/login']\\\">login</a>\\n      </li>\\n      <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact : true }\\\">\\n            <a [routerLink]=\\\"['/dashboard']\\\">dashboard</a>\\n      </li>\\n      <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact : true }\\\">\\n            <a [routerLink]=\\\"['/profile']\\\">profile</a>\\n      </li>\\n      <!-- TODO: make login/register one page... 'Sign Up!' from login -->\\n      <li *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact : true }\\\">\\n            <a [routerLink]=\\\"['/register']\\\">register</a>\\n      </li>\\n      <li *ngIf=\\\"authService.loggedIn()\\\">\\n            <a (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { toast } from 'angular2-materialize';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    toast('You are now logged out', 5000, 'orange');\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\" class=\\\"row\\\">\\n  <h2 class=\\\"col s6 m3 push-m3\\\">{{ user.name }}</h2>\\n  <div class=\\\"row\\\">\\n    <ul class=\\\"col s12 m6 push-m3\\\">\\n      <li>username: {{ user.username }}</li>\\n      <li>email: {{ user.email }}</li>\\n    </ul>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    const _this = this;\n    this.authService.getProfile().subscribe(function(profile) {\n      _this.user = profile.user\n    },\n    function(err) {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <h2 class=\\\"col s6 m3 push-m3\\\">register</h2>\\n  <form (submit)=\\\"onRegisterSubmit()\\\" class=\\\"col s12\\\">\\n    <!-- FIXME: difficult to click the actual inputs..? -->\\n    <div class=\\\"row\\\">\\n      <div class=\\\"input-field col s12 m6 push-m3\\\">\\n        <input name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\" class=\\\"validate\\\">\\n        <!--\\n          NOTE: intentionally not required,\\n                if a user chooses not to provide a name, they will be\\n                known as `Anonymous`\\n        -->\\n        <label for=\\\"name\\\">name</label>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"input-field col s12 m6 push-m3\\\">\\n        <input name=\\\"email\\\" [(ngModel)]=\\\"email\\\" type=\\\"email\\\" class=\\\"validate\\\" required>\\n        <label for=\\\"email\\\">email address</label>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"input-field col s12 m6 push-m3\\\">\\n        <input name=\\\"username\\\" [(ngModel)]=\\\"username\\\" type=\\\"text\\\" class=\\\"validate\\\" required>\\n        <label for=\\\"username\\\">username</label>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"input-field col s12 m6 push-m3\\\">\\n        <input name=\\\"password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\" required>\\n        <label for=\\\"password\\\">password</label>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"input-field col s12 m6 push-m3\\\">\\n        <input name=\\\"confirmPassword\\\" type=\\\"password\\\" class=\\\"validate\\\" required>\\n        <label for=\\\"confirmPassword\\\">confirm password</label>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"input-field col s12 m6 push-m3 white-text\\\">\\n        <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn waves-effect\\\" required>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { toast } from 'angular2-materialize';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(\n    private validateService: ValidateService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit() {\n    // can't send toast normally, gets consumed.. prevent default?\n    // TODO: add password validation against confirm password field\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    }\n\n    // validate fields filled before registering\n    if (!this.validateService.validateRegister(user)) {\n      toast('Please fill out all fields', 5000, 'red');\n      return false;\n    }\n    if (!this.validateService.validateEmail(user.email)) {\n      toast('Please provide a valid email', 5000, 'red');\n      return false;\n    }\n    // send the registration info to the backend\n    const _this = this;\n    this.authService.registerUser(user).subscribe(function(data) {\n      if (data.succ) {\n        toast('You are now registered!', 5000, 'green');\n        _this.router.navigate(['/login']);\n      }\n      else {\n        toast('Failed to register', 5000, 'red');\n        _this.router.navigate(['/register']);\n      }\n    });\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  canActivate() {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n    else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(\n    private http: Http,\n    private jwtHelperService: JwtHelperService\n  ) { }\n\n  registerUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {headers: headers}).pipe(\n      map(function(res) {\n        return res.json();\n      })\n    );\n  }\n\n  authenticateUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers: headers}).pipe(\n      map(function(res) {\n        return res.json();\n      })\n    );\n  }\n\n  getProfile() {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/users/profile', {headers: headers}).pipe(\n      map(function(res) {\n        return res.json();\n      })\n    );\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    // local storage can only accept strings. convert now then parse to JSON when you retrieve\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn() {\n    const _this = this;\n    return !this.jwtHelperService.isTokenExpired();\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.username == undefined || user.email == undefined || user.password == undefined) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}/igm;\n    return re.test(email);\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}